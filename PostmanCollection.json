{
  "info": {
    "_postman_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
    "name": "E-Commerce Microservices API",
    "description": "A complete collection for testing the NestJS E-Commerce Microservice project.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "1. Authentication & Users",
      "description": "Requests for user registration, login, and management.",
      "item": [
        {
          "name": "Register Admin User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "pm.collectionVariables.set(\"admin_user_id\", response.data.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Admin User\",\n    \"email\": \"admin@example.com\",\n    \"password\": \"Password123!\",\n    \"role\": \"ADMIN\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "register"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Register Regular User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "pm.collectionVariables.set(\"regular_user_id\", response.data.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Regular User\",\n    \"email\": \"user@example.com\",\n    \"password\": \"Password123!\",\n    \"role\": \"USER\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "register"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Login as Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "pm.collectionVariables.set(\"adminToken\", response.data.accessToken);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"Password123!\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Login as User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "pm.collectionVariables.set(\"userToken\", response.data.accessToken);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"Password123!\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Self Profile [USER]",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/me",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "me"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get All Users [ADMIN]",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{adminToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "body": {},
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "2. Products",
      "description": "Requests for managing products.",
      "item": [
        {
          "name": "Create Product [ADMIN]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "pm.collectionVariables.set(\"createdProductId\", response.data.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{adminToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Professional NestJS Book\",\n    \"description\": \"A book about building scalable applications with NestJS.\",\n    \"price\": 49.99,\n    \"stock\": 100,\n    \"sellerId\": 1,\n    \"images\": [\n        {\n            \"url\": \"https://example.com/images/book.jpg\",\n            \"index\": 0\n        }\n    ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "products"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products?page=1&limit=5",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "products"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "5"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/{{createdProductId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "products",
                "{{createdProductId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Search Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/search?q=book",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "products",
                "search"
              ],
              "query": [
                {
                  "key": "q",
                  "value": "book"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update Product [ADMIN]",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{adminToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"price\": 59.99,\n    \"stock\": 90\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/products/{{createdProductId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "products",
                "{{createdProductId}}"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "3. Cart",
      "description": "Requests for managing the user's shopping cart.",
      "item": [
        {
          "name": "Add Item to Cart [USER]",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"productId\": {{createdProductId}},\n    \"name\": \"Professional NestJS Book\",\n    \"price\": 59.99,\n    \"quantity\": 2\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/cart/add",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "cart",
                "add"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Cart [USER]",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/cart",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "cart"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "4. Orders",
      "description": "Requests for creating and viewing orders.",
      "item": [
        {
          "name": "Create Order [USER]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const response = pm.response.json();",
                  "pm.collectionVariables.set(\"createdOrderId\", response.data.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"products\": [\n        {\n            \"productId\": {{createdProductId}},\n            \"quantity\": 1\n        }\n    ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "orders"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Order By ID [USER]",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders/{{createdOrderId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "orders",
                "{{createdOrderId}}"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "5. Cleanup",
      "description": "Cleanup requests to delete created resources.",
      "item": [
        {
          "name": "Clear Cart [USER]",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/cart",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "cart"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Product [ADMIN]",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{adminToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/{{createdProductId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "products",
                "{{createdProductId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete User [SUPER_ADMIN - Not Implemented]",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{regular_user_id}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{regular_user_id}}"
              ]
            },
            "description": "Note: This requires a SUPER_ADMIN role which we have not registered. The endpoint is protected."
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "adminToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "createdProductId",
      "value": "",
      "type": "string"
    },
    {
      "key": "createdOrderId",
      "value": "",
      "type": "string"
    },
    {
      "key": "admin_user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "regular_user_id",
      "value": "",
      "type": "string"
    }
  ]
}